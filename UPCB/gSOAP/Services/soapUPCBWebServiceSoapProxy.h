/* soapUPCBWebServiceSoapProxy.h
   Generated by gSOAP 2.8.3 from upcb.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapUPCBWebServiceSoapProxy_H
#define soapUPCBWebServiceSoapProxy_H
#include "soapH.h"

class SOAP_CMAC UPCBWebServiceSoapProxy : public soap
{ public:
	/// Endpoint URL of service 'UPCBWebServiceSoapProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	UPCBWebServiceSoapProxy();
	/// Constructor with copy of another engine state
	UPCBWebServiceSoapProxy(const struct soap&);
	/// Constructor with endpoint URL
	UPCBWebServiceSoapProxy(const char *url);
	/// Constructor with engine input+output mode control
	UPCBWebServiceSoapProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	UPCBWebServiceSoapProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	UPCBWebServiceSoapProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~UPCBWebServiceSoapProxy();
	/// Initializer used by constructors
	virtual	void UPCBWebServiceSoapProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'AddProgram' (returns error code or SOAP_OK)
	virtual	int AddProgram(_ns1__AddProgram *ns1__AddProgram, _ns1__AddProgramResponse *ns1__AddProgramResponse) { return AddProgram(NULL, NULL, ns1__AddProgram, ns1__AddProgramResponse); }
	virtual	int AddProgram(const char *endpoint, const char *soap_action, _ns1__AddProgram *ns1__AddProgram, _ns1__AddProgramResponse *ns1__AddProgramResponse);

	/// Web service operation 'StartProgram' (returns error code or SOAP_OK)
	virtual	int StartProgram(_ns1__StartProgram *ns1__StartProgram, _ns1__StartProgramResponse *ns1__StartProgramResponse) { return StartProgram(NULL, NULL, ns1__StartProgram, ns1__StartProgramResponse); }
	virtual	int StartProgram(const char *endpoint, const char *soap_action, _ns1__StartProgram *ns1__StartProgram, _ns1__StartProgramResponse *ns1__StartProgramResponse);

	/// Web service operation 'StopProgram' (returns error code or SOAP_OK)
	virtual	int StopProgram(_ns1__StopProgram *ns1__StopProgram, _ns1__StopProgramResponse *ns1__StopProgramResponse) { return StopProgram(NULL, NULL, ns1__StopProgram, ns1__StopProgramResponse); }
	virtual	int StopProgram(const char *endpoint, const char *soap_action, _ns1__StopProgram *ns1__StopProgram, _ns1__StopProgramResponse *ns1__StopProgramResponse);

	/// Web service operation 'GetBoardInfo' (returns error code or SOAP_OK)
	virtual	int GetBoardInfo(_ns1__GetBoardInfo *ns1__GetBoardInfo, _ns1__GetBoardInfoResponse *ns1__GetBoardInfoResponse) { return GetBoardInfo(NULL, NULL, ns1__GetBoardInfo, ns1__GetBoardInfoResponse); }
	virtual	int GetBoardInfo(const char *endpoint, const char *soap_action, _ns1__GetBoardInfo *ns1__GetBoardInfo, _ns1__GetBoardInfoResponse *ns1__GetBoardInfoResponse);

	/// Web service operation 'GetDevices' (returns error code or SOAP_OK)
	virtual	int GetDevices(_ns1__GetDevices *ns1__GetDevices, _ns1__GetDevicesResponse *ns1__GetDevicesResponse) { return GetDevices(NULL, NULL, ns1__GetDevices, ns1__GetDevicesResponse); }
	virtual	int GetDevices(const char *endpoint, const char *soap_action, _ns1__GetDevices *ns1__GetDevices, _ns1__GetDevicesResponse *ns1__GetDevicesResponse);

	/// Web service operation 'GetDrivers' (returns error code or SOAP_OK)
	virtual	int GetDrivers(_ns1__GetDrivers *ns1__GetDrivers, _ns1__GetDriversResponse *ns1__GetDriversResponse) { return GetDrivers(NULL, NULL, ns1__GetDrivers, ns1__GetDriversResponse); }
	virtual	int GetDrivers(const char *endpoint, const char *soap_action, _ns1__GetDrivers *ns1__GetDrivers, _ns1__GetDriversResponse *ns1__GetDriversResponse);

	/// Web service operation 'GetPrograms' (returns error code or SOAP_OK)
	virtual	int GetPrograms(_ns1__GetPrograms *ns1__GetPrograms, _ns1__GetProgramsResponse *ns1__GetProgramsResponse) { return GetPrograms(NULL, NULL, ns1__GetPrograms, ns1__GetProgramsResponse); }
	virtual	int GetPrograms(const char *endpoint, const char *soap_action, _ns1__GetPrograms *ns1__GetPrograms, _ns1__GetProgramsResponse *ns1__GetProgramsResponse);

	/// Web service operation 'GetProgram' (returns error code or SOAP_OK)
	virtual	int GetProgram(_ns1__GetProgram *ns1__GetProgram, _ns1__GetProgramResponse *ns1__GetProgramResponse) { return GetProgram(NULL, NULL, ns1__GetProgram, ns1__GetProgramResponse); }
	virtual	int GetProgram(const char *endpoint, const char *soap_action, _ns1__GetProgram *ns1__GetProgram, _ns1__GetProgramResponse *ns1__GetProgramResponse);

	/// Web service operation 'GetProgramStatus' (returns error code or SOAP_OK)
	virtual	int GetProgramStatus(_ns1__GetProgramStatus *ns1__GetProgramStatus, _ns1__GetProgramStatusResponse *ns1__GetProgramStatusResponse) { return GetProgramStatus(NULL, NULL, ns1__GetProgramStatus, ns1__GetProgramStatusResponse); }
	virtual	int GetProgramStatus(const char *endpoint, const char *soap_action, _ns1__GetProgramStatus *ns1__GetProgramStatus, _ns1__GetProgramStatusResponse *ns1__GetProgramStatusResponse);

	/// Web service operation 'GetRunningProgramsStatus' (returns error code or SOAP_OK)
	virtual	int GetRunningProgramsStatus(_ns1__GetRunningProgramsStatus *ns1__GetRunningProgramsStatus, _ns1__GetRunningProgramsStatusResponse *ns1__GetRunningProgramsStatusResponse) { return GetRunningProgramsStatus(NULL, NULL, ns1__GetRunningProgramsStatus, ns1__GetRunningProgramsStatusResponse); }
	virtual	int GetRunningProgramsStatus(const char *endpoint, const char *soap_action, _ns1__GetRunningProgramsStatus *ns1__GetRunningProgramsStatus, _ns1__GetRunningProgramsStatusResponse *ns1__GetRunningProgramsStatusResponse);
};
#endif
